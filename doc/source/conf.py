#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Rubberband documentation build configuration file, created by
# sphinx-quickstart on Thu Nov 16 11:15:57 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

sys.path.insert(0, os.path.abspath("../../"))
print("Looking into sys.path: {}".format(sys.path))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
    "sphinx.ext.githubpages",
    "sphinx.ext.napoleon",
    "myst_parser"
]

# Include Python objects as they appear in source files
# Default 'alphabetical', also 'bysource'
autodoc_member_order = "alphabetical"
# Default flags used by autodoc directives
autodoc_default_flags = ["members", "show-inheritance"]
# Generate autodoc stubs with summaries from code
autosummary_generate = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = [".rst", ".md"]

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "Rubberband"
copyright = "2018, Zuse Institute Berlin"
author = "Zuse Institute Berlin"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = "0.0.1"
# The full version, including alpha/beta/rc tags.
release = "0.0.1"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "classic"  # classic, nature, alabaster

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# http://www.sphinx-doc.org/en/stable/theming.html
#
# custom colors
rb_color_bg_light = "#fff"
rb_color_bg_highlight = "#bdf"
rb_color_bg_dark = "#337ab7"

rb_color_text_dark = "#333"
rb_color_text_gray = "#555"
rb_color_text_light = "#fff"
rb_color_text_highlight = rb_color_bg_dark
rb_color_text_highdark = rb_color_bg_highlight

html_theme_options = {
    "rightsidebar": False,
    "stickysidebar": True,
    "collapsiblesidebar": False,  # does not work with stickysidebar
    "externalrefs": False,
    "footerbgcolor": rb_color_bg_light,
    "footertextcolor": rb_color_bg_dark,
    "sidebarbgcolor": rb_color_bg_dark,
    "sidebarbtncolor": rb_color_bg_dark,
    "sidebartextcolor": rb_color_text_light,
    "sidebarlinkcolor": rb_color_text_highdark,
    "relbarbgcolor": rb_color_bg_dark,
    "relbartextcolor": rb_color_text_light,
    "relbarlinkcolor": rb_color_text_highdark,
    "bgcolor": rb_color_bg_light,
    "textcolor": rb_color_text_dark,
    "linkcolor": rb_color_text_highlight,
    "visitedlinkcolor": rb_color_text_highlight,
    "headbgcolor": rb_color_bg_highlight,
    "headtextcolor": rb_color_text_dark,
    "headlinkcolor": rb_color_text_dark,
    #        "codebgcolor": rb_color_bg_ ,
    #        "codetextcolor": rb_color_text_ ,
    "bodyfont": "'Fira Mono' sans-serif",
    "headfont": "'Fira Mono' sans-serif",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# can be the following:
# localtoc.html – a fine-grained table of contents of the current document
# globaltoc.html – a coarse-grained table of contents for the whole documentation set, collapsed
# relations.html – two links to the previous and next documents
# sourcelink.html – a link to the source of the current document, if enabled in html_show_sourcelink
# searchbox.html – the “quick search” box
html_sidebars = {
    "**": ["localtoc.html", "searchbox.html", "globaltoc.html", "sourcelink.html"],
}

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "Rubberbanddoc"


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "Rubberband.tex",
        "Rubberband Documentation",
        "Zuse Institute Berlin",
        "manual",
    ),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "rubberband", "Rubberband Documentation", [author], 1)]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "Rubberband",
        "Rubberband Documentation",
        author,
        "Rubberband",
        "One line description of project.",
        "Miscellaneous",
    ),
]

# -- Extension interface --------------------------


def setup(app):
    app.add_css_file(
        "css/custom.css"
    )  # may also be an URL, files found in _static/css
    # app.add_javascript('file.js') # may also be an URL, files found in _static/
