# an example nginx configuration for rubberband with oauth2_proxy for frontend authentication
upstream rubberband-auth {
    server 127.0.0.1:4180;
}

upstream rubberband-api {
    server 127.0.0.1:8888;
}

server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name  rubberband.example.com;

    # out files are large
    client_body_in_file_only clean;
    client_body_buffer_size 32K;
    client_max_body_size 400M;
    sendfile on;
    send_timeout 300s;
    tcp_nodelay on;
    tcp_nopush on;

    ssl_certificate             /path/to/certs/example.fullchain.pem;
    ssl_certificate_key         /path/to/key/example.key.pem;
    add_header Strict-Transport-Security max-age=2592000;

    access_log        /var/log/nginx/rubberband-access.log;
    error_log         /var/log/nginx/rubberband-error.log;

    location / {
         proxy_pass http://rubberband-auth;
         proxy_set_header        Host $host;
         proxy_set_header        X-Real-IP $remote_addr;
         proxy_set_header        X-Forwarded-Proto $scheme;
         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_connect_timeout 60;
         proxy_send_timeout 600;
         proxy_read_timeout 600;
    }
    location ^~ /api {
         proxy_pass http://rubberband-api;
         proxy_set_header        Host $host;
         proxy_set_header        X-Real-IP $remote_addr;
         proxy_set_header        X-Forwarded-Proto $scheme;
         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_connect_timeout 60;
         proxy_send_timeout 600;
         proxy_read_timeout 600;
    }
}
